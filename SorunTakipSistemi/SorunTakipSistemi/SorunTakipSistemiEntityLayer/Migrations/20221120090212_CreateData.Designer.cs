// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SorunTakipSistemiEntityLayer.DatabaseModelContext;

#nullable disable

namespace SorunTakipSistemiEntityLayer.Migrations
{
    [DbContext(typeof(SorunTakipDatabaseModelContext))]
    [Migration("20221120090212_CreateData")]
    partial class CreateData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.ProblemTracking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationOpener")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transacter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ProblemTrackings", "dbo");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.ProblemTrackingComment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProblemTrackingCommentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProblemTrackingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserMemberID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProblemTrackingCommentID");

                    b.HasIndex("ProblemTrackingID");

                    b.HasIndex("UserMemberID");

                    b.ToTable("ProblemTrackingComments", "dbo");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.UserMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserMemberRoleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserMemberRoleID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.HasIndex("UserMemberRoleID1");

                    b.ToTable("UserMembers", "dbo");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.UserMemberRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleCode")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("UserMemberRoles", "dbo");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.ProblemTrackingComment", b =>
                {
                    b.HasOne("SorunTakipSistemiEntityLayer.Model.ProblemTrackingComment", null)
                        .WithMany("ProblemTrackingComments")
                        .HasForeignKey("ProblemTrackingCommentID");

                    b.HasOne("SorunTakipSistemiEntityLayer.Model.ProblemTracking", "ProblemTracking")
                        .WithMany()
                        .HasForeignKey("ProblemTrackingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SorunTakipSistemiEntityLayer.Model.UserMember", "UserMember")
                        .WithMany("ProblemTrackingComments")
                        .HasForeignKey("UserMemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProblemTracking");

                    b.Navigation("UserMember");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.UserMember", b =>
                {
                    b.HasOne("SorunTakipSistemiEntityLayer.Model.UserMemberRole", "UserMemberRole")
                        .WithMany("UserMembers")
                        .HasForeignKey("UserMemberRoleID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMemberRole");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.ProblemTrackingComment", b =>
                {
                    b.Navigation("ProblemTrackingComments");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.UserMember", b =>
                {
                    b.Navigation("ProblemTrackingComments");
                });

            modelBuilder.Entity("SorunTakipSistemiEntityLayer.Model.UserMemberRole", b =>
                {
                    b.Navigation("UserMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
